events {}

http {
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # We specify the servers
    upstream grafana {
        server 172.16.238.10:3000;
    }
    
    upstream app {
        # Angular SSR frontend
        server 172.16.238.80:4000;
    }

    server {
        listen 80;

        location / {
            rewrite  ^/app/(.*)$  /$1 break;
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # Proxy est√°ticos generados por Angular (paths absolutos)
        location ~ ^/(?:styles|polyfills|main|assets|favicon\.ico).*$ {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /grafana/ {
            rewrite  ^/grafana/(.*)  /$1 break;

            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            # WS connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # NGINX metrics for Prometheus (with IP restriction)
    server {
        listen 8080;

        location /basic_status {
            allow 172.16.238.40; # We only allow the NGINX metrics extractor IP
            deny all;

            stub_status;
        }
    }
}
